/*
 * Copyright (C) 2009-2010 Amit Kucheria <amit.kucheria@canonical.com>
 * Copyright (C) 2010 Freescale Semiconductor, Inc.
 * Copyright (C) 2009-2013 Genesi USA, Inc.
 *
 * The code contained herein is licensed under the GNU General Public
 * License. You may obtain a copy of the GNU General Public License
 * Version 2 or later at the following locations:
 *
 * http://www.opensource.org/licenses/gpl-license.html
 * http://www.gnu.org/copyleft/gpl.html
 */

/*
 * The vast majority of this file is taken from the Linux kernel at
 * commit 5d23b39
 */

#ifndef __IOMUX_MX53_H__
#define __IOMUX_MX53_H__

#include <asm/imx-common/iomux-v3.h>

#define PAD_CTL_DVS			(1 << 13)
#define PAD_CTL_INPUT_DDR		(1 << 9)
#define PAD_CTL_HYS			(1 << 8)

#define PAD_CTL_PKE			(1 << 7)
#define PAD_CTL_PUE			(1 << 6 | PAD_CTL_PKE)
#define PAD_CTL_PUS_100K_DOWN		(0 << 4 | PAD_CTL_PUE)
#define PAD_CTL_PUS_47K_UP		(1 << 4 | PAD_CTL_PUE)
#define PAD_CTL_PUS_100K_UP		(2 << 4 | PAD_CTL_PUE)
#define PAD_CTL_PUS_22K_UP		(3 << 4 | PAD_CTL_PUE)

#define PAD_CTL_ODE			(1 << 3)

#define PAD_CTL_DSE_LOW			(0 << 1)
#define PAD_CTL_DSE_MED			(1 << 1)
#define PAD_CTL_DSE_HIGH		(2 << 1)
#define PAD_CTL_DSE_MAX			(3 << 1)

#define PAD_CTL_SRE_FAST		(1 << 0)
#define PAD_CTL_SRE_SLOW		(0 << 0)

#define IOMUX_CONFIG_SION		(0x1 << 4)

/* Pad control groupings */
#define MX53_UART_PAD_CTRL		(PAD_CTL_PKE | PAD_CTL_PUE |	\
		PAD_CTL_DSE_HIGH | PAD_CTL_SRE_FAST | PAD_CTL_HYS)
#define MX53_SDHC_PAD_CTRL 	(PAD_CTL_HYS | PAD_CTL_PKE | PAD_CTL_PUE | \
				PAD_CTL_PUS_47K_UP | PAD_CTL_DSE_HIGH | \
				PAD_CTL_SRE_FAST)

#define __NA_ 0x000

/*
 * The naming convention for the pad modes is MX53_PAD_<padname>__<padmode>
 * If <padname> or <padmode> refers to a GPIO, it is named GPIO<unit>_<num>
 * See also iomux-v3.h
 */

/*							     PAD    MUX   ALT INPSE PATH PADCTRL */
enum {
	MX53_PAD_KEY_COL4__GPIO4_14		= IOMUX_PAD(0x36C, 0x044, 1, __NA_, 0, NO_PAD_CTRL),
	MX53_PAD_KEY_ROW4__GPIO4_15		= IOMUX_PAD(0x370, 0x048, 1, __NA_, 0, NO_PAD_CTRL),
	MX53_PAD_EIM_D30__GPIO3_30		= IOMUX_PAD(0x49C, 0x154, 1, __NA_, 0, NO_PAD_CTRL),
	MX53_PAD_EIM_D31__GPIO3_31		= IOMUX_PAD(0x4A0, 0x158, 1, __NA_, 0, NO_PAD_CTRL),
	MX53_PAD_EIM_DA0__EMI_NAND_WEIM_DA_0	= IOMUX_PAD(0x4EC, 0x19C, 0, __NA_, 0, NO_PAD_CTRL),
	MX53_PAD_EIM_DA1__EMI_NAND_WEIM_DA_1	= IOMUX_PAD(0x4F0, 0x1A0, 0, __NA_, 0, NO_PAD_CTRL),
	MX53_PAD_EIM_DA2__EMI_NAND_WEIM_DA_2	= IOMUX_PAD(0x4F4, 0x1A4, 0, __NA_, 0, NO_PAD_CTRL),
	MX53_PAD_EIM_DA3__EMI_NAND_WEIM_DA_3	= IOMUX_PAD(0x4F8, 0x1A8, 0, __NA_, 0, NO_PAD_CTRL),
	MX53_PAD_EIM_DA4__EMI_NAND_WEIM_DA_4	= IOMUX_PAD(0x4FC, 0x1AC, 0, __NA_, 0, NO_PAD_CTRL),
	MX53_PAD_EIM_DA5__EMI_NAND_WEIM_DA_5	= IOMUX_PAD(0x500, 0x1B0, 0, __NA_, 0, NO_PAD_CTRL),
	MX53_PAD_EIM_DA6__EMI_NAND_WEIM_DA_6	= IOMUX_PAD(0x504, 0x1B4, 0, __NA_, 0, NO_PAD_CTRL),
	MX53_PAD_EIM_DA7__EMI_NAND_WEIM_DA_7	= IOMUX_PAD(0x508, 0x1B8, 0, __NA_, 0, NO_PAD_CTRL),
	MX53_PAD_NANDF_WE_B__EMI_NANDF_WE_B	= IOMUX_PAD(0x52C, 0x1DC, 0, __NA_, 0, NO_PAD_CTRL),
	MX53_PAD_NANDF_RE_B__EMI_NANDF_RE_B	= IOMUX_PAD(0x530, 0x1E0, 0, __NA_, 0, NO_PAD_CTRL),
	MX53_PAD_NANDF_CLE__EMI_NANDF_CLE	= IOMUX_PAD(0x5A0, 0x228, 0, __NA_, 0, NO_PAD_CTRL),
	MX53_PAD_NANDF_ALE__EMI_NANDF_ALE	= IOMUX_PAD(0x5A4, 0x22C, 0, __NA_, 0, NO_PAD_CTRL),
	MX53_PAD_NANDF_WP_B__EMI_NANDF_WP_B	= IOMUX_PAD(0x5A8, 0x230, 0, __NA_, 0, NO_PAD_CTRL),
	MX53_PAD_NANDF_RB0__EMI_NANDF_RB_0	= IOMUX_PAD(0x5AC, 0x234, 0, __NA_, 0, NO_PAD_CTRL),
	MX53_PAD_NANDF_CS0__EMI_NANDF_CS_0	= IOMUX_PAD(0x5B0, 0x238, 0, __NA_, 0, NO_PAD_CTRL),
	MX53_PAD_NANDF_CS1__EMI_NANDF_CS_1	= IOMUX_PAD(0x5B4, 0x23C, 0, __NA_, 0, NO_PAD_CTRL),
	MX53_PAD_PATA_DIOW__UART1_TXD_MUX	= IOMUX_PAD(0x5F0, 0x270, 3, __NA_, 0, MX53_UART_PAD_CTRL),
	MX53_PAD_PATA_DMACK__UART1_RXD_MUX	= IOMUX_PAD(0x5F4, 0x274, 3, 0x878, 3, MX53_UART_PAD_CTRL),
	MX53_PAD_PATA_DMARQ__UART2_TXD_MUX	= IOMUX_PAD(0x5F8, 0x278, 3, __NA_, 0, MX53_UART_PAD_CTRL),
	MX53_PAD_PATA_BUFFER_EN__UART2_RXD_MUX	= IOMUX_PAD(0x5FC, 0x27C, 3, 0x880, 3, MX53_UART_PAD_CTRL),
	MX53_PAD_SD1_DATA0__ESDHC1_DAT0		= IOMUX_PAD(0x66C, 0x2E4, 0, __NA_, 0, MX53_SDHC_PAD_CTRL),
	MX53_PAD_SD1_DATA1__ESDHC1_DAT1		= IOMUX_PAD(0x670, 0x2E8, 0, __NA_, 0, MX53_SDHC_PAD_CTRL),
	MX53_PAD_SD1_CMD__ESDHC1_CMD		= IOMUX_PAD(0x674, 0x2EC, 0 | IOMUX_CONFIG_SION, __NA_, 0, MX53_SDHC_PAD_CTRL),
	MX53_PAD_SD1_DATA2__ESDHC1_DAT2		= IOMUX_PAD(0x678, 0x2F0, 0, __NA_, 0, MX53_SDHC_PAD_CTRL),
	MX53_PAD_SD1_CLK__ESDHC1_CLK		= IOMUX_PAD(0x67C, 0x2F4, 0, __NA_, 0, MX53_SDHC_PAD_CTRL),
	MX53_PAD_SD1_DATA3__ESDHC1_DAT3		= IOMUX_PAD(0x680, 0x2F8, 0, __NA_, 0, MX53_SDHC_PAD_CTRL),
	MX53_PAD_SD2_CLK__ESDHC2_CLK		= IOMUX_PAD(0x688, 0x2FC, 0, __NA_, 0, MX53_SDHC_PAD_CTRL),
	MX53_PAD_SD2_CMD__ESDHC2_CMD		= IOMUX_PAD(0x68C, 0x300, 0, __NA_, 0, MX53_SDHC_PAD_CTRL),
	MX53_PAD_SD2_DATA3__ESDHC2_DAT3		= IOMUX_PAD(0x690, 0x304, 0, __NA_, 0, MX53_SDHC_PAD_CTRL),
	MX53_PAD_SD2_DATA2__ESDHC2_DAT2		= IOMUX_PAD(0x694, 0x308, 0, __NA_, 0, MX53_SDHC_PAD_CTRL),
	MX53_PAD_SD2_DATA1__ESDHC2_DAT1		= IOMUX_PAD(0x698, 0x30C, 0, __NA_, 0, MX53_SDHC_PAD_CTRL),
	MX53_PAD_SD2_DATA0__ESDHC2_DAT0		= IOMUX_PAD(0x69C, 0x310, 0, __NA_, 0, MX53_SDHC_PAD_CTRL),
	MX53_PAD_GPIO_9__GPIO1_9		= IOMUX_PAD(0x6AC, 0x31C, 1, __NA_, 0, NO_PAD_CTRL),
};

#endif /* __IOMUX_MX51_H__ */
